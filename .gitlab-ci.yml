stages:
  - validate
  - build
  - test
  - package
  - deploy

# Configuration for backend jobs
.maven:
  image: maven:3.8.1-jdk-11-slim
  cache:
    key: maven-$CI_COMMIT_REF_SLUG
    paths:
      - api/.m2/repository/
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
    MAVEN_CLI_OPTS: "-Dmaven.repo.local=.m2/repository -Dstyle.color=always"

# Configuration for frontend jobs
.node:
  image: node:10-alpine
  cache:
    key: node-$CI_COMMIT_REF_SLUG
    paths:
      - front/node_modules/

# Checkstyle for backend
compile-back:
  extends: .maven
  stage: validate
  script:
    - cd api
    - mvn clean compile
  rules:
    - changes:
        - api/src
        - api/checkstyle.xml
        - .gitlab-ci.yml
  artifacts:
    when: on_failure
    paths:
      - api/target/checkstyle-result.xml

lint-front:
  extends: .node
  stage: validate
  script:
    - cd front
    - npm install
    - npm run ng lint
  rules:
    - changes:
        - front/src
        - .gitlab-ci.yml

build-back:
  extends: .maven
  stage: build
  script:
    - cd api
    - mvn clean package -Dmaven.test.skip=true -Dquarkus.package.type=uber-jar
  artifacts:
    paths:
      - api/target/tlcdemoApp-1.0.0-SNAPSHOT-runner.jar
    expire_in: 1 day

build-front:
  extends: .node
  stage: build
  script:
    - cd front
    - npm install
    - ./node_modules/.bin/ng build --prod
  artifacts:
    paths:
      - front/dist/tlcfront/*
    expire_in: 1 day

test-back:
  extends: .maven
  stage: test
  needs:
    - job: build-back
  services:
    - mysql
  variables:
    MYSQL_ROOT_PASSWORD: root
    MYSQL_DATABASE: tlc
    MYSQL_USER: tlc
    MYSQL_PASSWORD: tlc
    MYSQL_SERVER_NAME: mysql
  script:
    - cd api
    - mvn test
  rules:
    - changes:
      - api/src
      - .gitlab-ci.yml
  artifacts:
    reports:
      junit:
        - api/target/surefire-reports/TEST-*.xml

test-front:
  extends: .node
  stage: test
  needs:
    - job: build-front
  script:
    - apk add chromium
    - export CHROME_BIN=/usr/bin/chromium-browser
    - cd front
    - npm install
    - ./node_modules/.bin/ng test --no-watch --no-progress --browsers=ChromeHeadlessCI
  rules:
    - changes:
        - front/src
        - .gitlab-ci.yml
  artifacts:
    reports:
      junit:
        - front/artifacts/tests/junit-test-results.xml

test-integration:
  extends: .node
  stage: test
  services:
    - mysql
  needs:
    - job: build-back
    - job: build-front
  dependencies:
    - build-back
  variables:
    MYSQL_ROOT_PASSWORD: root
    MYSQL_DATABASE: tlc
    MYSQL_USER: tlc
    MYSQL_PASSWORD: tlc
    SERVER_NAME: mysql
    BACK_PORT: 8127
  script:
    - apk add chromium
    - export CHROME_BIN=/usr/bin/chromium-browser
    - apk update
    - apk add openjdk11
#    - node ./node_modules/.bin/webdriver-manager update
    - java -jar api/target/tlcdemoApp-1.0.0-SNAPSHOT-runner.jar &
    - cd front
    - npm install
#    - ./node_modules/.bin/ng e2e
  rules:
    - changes:
        - api/src/main
        - front/src
        - front/e2e
        - .gitlab-ci.yml

package-back:
  image: docker:20.10.9
  stage: package
  needs:
    - job: build-back
    - job: test-back
  dependencies:
    - test-back
    - build-back
  services:
    - docker:20.10.9-dind
  before_script:
    - docker info
    - apk add xz
  script:
    - cd api
    - docker build -t tlc-backend .
    - docker save tlc-backend | xz > ../tlc-backend-docker.tar.xz
  artifacts:
    paths:
      - tlc-backend-docker.tar.xz
      - api/target/tlcdemoApp-1.0.0-SNAPSHOT-runner.jar
  rules:
    - changes:
        - api/src
        - api/Dockerfile
        - .gitlab-ci.yml

package-front:
  image: docker:20.10.9
  stage: package
  needs:
    - job: build-front
    - job: test-front
    - job: test-integration
  dependencies:
    - build-front
    - test-front
    - test-integration
  services:
    - docker:20.10.9-dind
  before_script:
    - docker info
    - apk add xz
  script:
    - cd front
    - docker build -t tlc-frontend .
    - docker save tlc-frontend | xz > ../tlc-frontend-docker.tar.xz
  artifacts:
    paths:
      - tlc-frontend-docker.tar.xz
      - front/dist/*
      - front/nginx.conf
  rules:
    - changes:
        - front
        - .gitlab-ci.yml

deploy:
  image: docker:20.10.9
  stage: deploy
  needs:
    - job: package-back
    - job: package-front
  dependencies:
    - package-back
    - package-front
  services:
    - docker:20.10.9-dind
  variables:
    SERVER_USER: romain
  before_script:
    - apk add openssh-client
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - cd front
    - scp -P22 nginx.conf "$SERVER_USER"@"$SERVER_IP":~/conf.d/tlc.conf
    - scp -P22 -r dist/tlcfront "$SERVER_USER"@"$SERVER_IP":~/html